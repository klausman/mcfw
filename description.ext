// Mission Header
class Header {
    // Available gameTypes:
    // Coop:    |   Coop Mission: The meat and bread MC missions
    // DM       |   Death Match
    // TDM      |   Team Death Match
    // CTF      |   Capture The Flag (or, nuke)
    // SC       |   Sector Control (Think insurgency - the red/green squares)
    // RPG      |   Skyrim
    // Sandbox  |   Free Game type, think Dark Ripoff
    // Seize    |   Seize a location
    // Defend   |   Defend a location
    gameType = Coop;
    minPlayers = 1;
    maxPlayers = 100;
};

// Loading Screen
onLoadName = "Insert mission name here";
onLoadMission = "Made with a framework";
author = "Insert mission author name here";
loadScreen = "mc.paa";

// Debug Console
enableDebugConsole = 1;

// Respawn Settings
//
// More Info:
// https://community.bistudio.com/wiki/Arma_3_Respawn
//
// 1    Respawn as Bird (for normal mission, no reinforcements).
// 2    Respawn on death location without gear, used in special missions.
// 3    Respawn at base marker (used when reinforcements are an option).
// 4    Respawn either in group if an AI slot is filled or as seagull.
// If 3 is chosen, place down makers with the following names as necessary:
// respawn_west, respawn_guerilla, respawn_east, respawn_civillian.
respawn = 3;
respawndelay = 5;
respawnOnStart = 0;
respawnDialog = 0;
// Useful values here are: "Group", "Counter" and "Spectator"
respawnTemplates[] = {"Group"};

// RotorLib Simulation Setting
// 0 - default: player options, 1 - all on, 2 - all off.
forceRotorLibSimulation = 0;

// Disable playableunits AI
disabledAI = true;

// Remove corpse manager
corpseManagerMode = 1;
corpseLimit = 15;
corpseRemovalMinTime = 60; //seconds
corpseRemovalMaxTime = 300; //seconds

// Start of Notification templates
class cfgNotifications {
    // Notification Template
    class Template {
        // Tile displayed as text on black background. Filled by arguments.
        title = ""; 
        // Small icon displayed in left part. Colored by "color", filled by
        // arguments.
        iconPicture = "";
        // Short text displayed over the icon. Colored by "color", filled by
        // arguments.
        iconText = "";
        // Brief description displayed as structured text. Colored by "color",
        // filled by arguments.
        description = "";
        color[] = {1,1,1,1}; // Icon and text color
        duration = 5; // How many seconds will the notification be displayed
        // Priority; higher number = more important; tasks in queue are
        // selected by priority
        priority = 0;
        // Required difficulty settings. All listed difficulties has to be
        // enabled
        difficulty[] = {};
    };
    // A generic warning notification
    class Alert {
        title = "ALERT";
        description = "%1";
        iconPicture="\A3\ui_f\data\map\markers\military\warning_ca.paa";
        duration = 3;
        priority = 9;
    };

    class SafeStart {
        title = "SAFE START";
        description = "%1";
        iconPicture="\A3\UI_F\data\IGUI\Cfg\Actions\settimer_ca.paa";
        duration = 10;
        priority = 0;
    };
    class SafeStartMissionStarting {
        title = "SAFE START";
        description = "%1";
        iconPicture="\A3\UI_F\data\IGUI\Cfg\Actions\settimer_ca.paa";
        duration = 3;
        priority = 1;
    };
};
// End of Notification templates

// Start of Params code blocks.
// WARNING: DO NOT DELETE OR COMMENT OUT THIS CODE BLOCK
class Params {
    // - Debug Mode
    // WARNING: DO NOT DISABLE THIS COMPONENT
    class f_param_debugMode {
            title = "$STR_f_param_debugMode";
            values[] = {0,1};
            texts[] = {"Off","On"};
            default = 0;
            code = "f_var_debugMode = %1";
    };

    // Folk Assign Gear Script
    class f_param_backpacks {
            title = "$STR_f_param_loadouts";
            values[] = {0,1,2};
            texts[] = {"Light","Medium","Heavy"};
            default = 1;
            code = "f_param_backpacks = %1";
    };

    // Mission Timer/Safe Start
    class f_param_mission_timer {
            title = "$STR_f_param_mission_timer";
            values[] = {0,1,2,3,4,5,6,7,8,9,10,15};
            texts[] = {"$STR_f_param_mission_timer_off","1","2","3","4","5","6","7","8","9","10","15"};
            default = 5;
            code = "f_param_mission_timer = %1";
    };

    // Clientside Caching
    // Credits: Captainblaffer
    class mc_param_cscaching {
        title = "Enable Clientside caching? NOTE: Disable this when spawning AI with Zeus";
        values[] = {0,1};
        texts[] = {"Off","On"};
        default = 0;
        code = "mc_param_cscaching = %1";
    };
    class mc_murk_headless {
        title = "Enable Headless Client takeover of murk-spawned units";
        values[] = {0, 1};
        texts[] = {"Off", "On"};
        default = 1;
        code = "mc_murk_headless = %1";
    };
    class mc_assigngear_telepole {
        title = "Allow players to re-run assignGear on teleport pole";
        values[] = {0, 1};
        texts[] = {"Off", "On"};
        default = 1;
        code = "mc_assigngear_telepole = %1";
    }
};
// End of Params code blocks.
// WARNING: DO NOT DELETE OR COMMENT OUT THIS CODE BLOCK

// Briefing Templates
class CfgDebriefing {
    class End1 {
        title = "Ending #1";
        subtitle = "";
        description = "Please post to the AAR thread!";
        // pictureBackground = "";
        // picture = "";
        // pictureColor[] = {0.0,0.3,0.6,1};
    };
    class End2 {
        title = "Ending #2";
        subtitle = "";
        description = "Please post to the AAR thread!";
        // pictureBackground = "";
        // picture = "";
        // pictureColor[] = {0.0,0.3,0.6,1};
    };
    class End3 {
        title = "Ending #3";
        subtitle = "";
        description = "Please post to the AAR thread!";
        // pictureBackground = "";
        // picture = "";
        // pictureColor[] = {0.0,0.3,0.6,1};
    };
    class End4 {
        title = "Ending #4";
        subtitle = "";
        description = "Please post to the AAR thread!";
        // pictureBackground = "";
        // picture = "";
        // pictureColor[] = {0.0,0.3,0.6,1};
    };
    class End5 {
        title = "Ending #5";
        subtitle = "";
        description = "Please post to the AAR thread!";
        // pictureBackground = "";
        // picture = "";
        // pictureColor[] = {0.0,0.3,0.6,1};
    };
    class End6 {
        title = "Ending #6";
        subtitle = "";
        description = "Please post to the AAR thread!";
        // pictureBackground = "";
        // picture = "";
        // pictureColor[] = {0.0,0.3,0.6,1};
    };
};

// Functions
// DO NOT REMOVE OR DISABLE THIS BLOCK OF CODE
class CfgFunctions {
    class F { // Defines the "owner"
        class common { // category
            file = "f\common";
            // Defines the function to preInit (the paramArray dosent seem to
            // be constructed at preInit stage).
            class processParamsArray {
                preInit = 1;
                postInit = 1;
            };

            class nearPlayer{};
        };
        class assignGear {
            // Defines the functions to preInit the compling of the assignGear
            // function used by units.
            file = "f\assignGear_simple";
            // If you want to use the old AssignGear, delete the line above and
            // uncomment (remove the //) the line below.
            //file = "f\assignGear";
            class assignGear{};
        };
        class setGroupID {
            file = "f\setGroupID";
            class setGroupID{};
        };
        class groupMarkers {
            file = "f\groupMarkers";
            class localGroupMarker{};
            class localSpecialistMarker{};
        };
        class FTMemberMarkers {
            file = "f\FTMemberMarkers";
            class SetLocalFTMemberMarkers{};
            class GetMarkerColor{};
            class LocalFTMarkerSync{};
        };
        class zeus {
            file = "f\zeus";
            class zeusInit{};
            class zeusAddAddons{};
            class zeusAddObjects{};
        };
        class safeStart {
            file = "f\safeStart";
            class safety{};
        };
    };

    class mc {
        class ClientsideCaching {
            file = "extras";
            class ClientsideCaching{};
        };
        class CscGroupmanagement {
            file = "extras";
            class CscGroupmanagement{};
        };
        class log {
            file = "extras\log";
            class rptlog{};
            class chatlog{};
            class bothlog{};
        };
        class teleport {
            file = "extras\telepole";
            class telepole{};
            class telepole_reinit{};
            class teleport{};
        };
        class strReplace {
            file = "extras";
            class stringReplace{};
        };
    };

    class MURK {
        class nearPlayerGround {
            file = "murk";
            class nearPlayerGround{};
        };
    };
};

// Custom Insignia
class CfgUnitInsignia {
    #include "f\assignGear\insignia\define.hpp"
};

// vim: sts=-1 ts=4 et sw=4
